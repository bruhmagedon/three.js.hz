import { useState } from "react";

// *тут хуй знает, все надо делать в одной матрице или в двух, будем тестить
export const useModel = () => {
    // матрица вершин
    const [objectModel] = useState([
        { x: 0, y: 0, z: 0 },
        // f туловище 1-4
        { x: -3, y: 0, z: 3 },
        { x: -3, y: 4, z: 3 },
        { x: 3, y: 4, z: 3 },
        { x: 3, y: 0, z: 3 },
        // f левая рука 5-7
        { x: -6, y: 0, z: 3 },
        { x: -6, y: 2, z: 3 },
        { x: -3, y: 2, z: 3 },
        // f правая рука 8-10
        { x: 3, y: 2, z: 3 },
        { x: 6, y: 2, z: 3 },
        { x: 6, y: 0, z: 3 },
        // f лицо  11-12
        { x: -3, y: -4, z: 3 },
        { x: 3, y: -4, z: 3 },
        // f шляпа 13
        { x: 0, y: -10, z: 0.5 },
        // f левая нога 14-16
        { x: -3, y: 8, z: 3 },
        { x: -1, y: 8, z: 3 },
        { x: -1, y: 4, z: 3 },
        // f правая нога 17-19
        { x: 1, y: 4, z: 3 },
        { x: 1, y: 8, z: 3 },
        { x: 3, y: 8, z: 3 },
        // f левый глаз 20-23
        { x: -2, y: -3, z: 3 },
        { x: -2, y: -2, z: 3 },
        { x: -1, y: -2, z: 3 },
        { x: -1, y: -3, z: 3 },
        // f првый глаз 24-27
        { x: 1, y: -3, z: 3 },
        { x: 1, y: -2, z: 3 },
        { x: 2, y: -2, z: 3 },
        { x: 2, y: -3, z: 3 },
        // f рот 28 - 31
        { x: -2, y: -1, z: 3 },
        { x: -2, y: 0, z: 3 },
        { x: 2, y: 0, z: 3 },
        { x: 2, y: -1, z: 3 },
        // // b туловище 32-35
        { x: -3, y: 0, z: -2 },
        { x: -3, y: 4, z: -2 },
        { x: 3, y: 4, z: -2 },
        { x: 3, y: 0, z: -2 },
        // b левая рука 36-38
        { x: -6, y: 0, z: -2 },
        { x: -6, y: 2, z: -2 },
        { x: -3, y: 2, z: -2 },
        // b правая рука 40-42
        { x: 3, y: 2, z: -2 },
        { x: 6, y: 2, z: -2 },
        { x: 6, y: 0, z: -2 },
        // b лицо  43-44
        { x: -3, y: -4, z: -2 },
        { x: 3, y: -4, z: -2 },
        // b шляпа 45
        { x: 0, y: -10, z: 0.5 },
        // b левая нога 46-48
        { x: -3, y: 8, z: -2 },
        { x: -1, y: 8, z: -2 },
        { x: -1, y: 4, z: -2 },
        // b правая нога 49-50
        { x: 1, y: 4, z: -2 },
        { x: 1, y: 8, z: -2 },
        { x: 3, y: 8, z: -2 },
    ]);

    // ! ВОЗМОЖНО СНАЧАЛА СТОИТ РИСОВАТЬ ЗАДНЮЮ ПАНЕЛЬ, А ПОТОМ ПЕРЕДНЮЮ

    // матрица граней
    const edges = [
        // * передняя часть
        // туловище f
        [1, 2],
        [1, 4],
        [2, 3],
        [3, 4],

        // // *тестовый квадрат
        // [5, 6],
        // [5, 8],
        // [6, 7],
        // [7, 8],

        // [1, 5],
        // [2, 6],
        // [3, 7],
        // [4, 8],

        // левая рука f
        [5, 6],
        [5, 1],
        [6, 7],
        // правая рука f
        [4, 10],
        [8, 9],
        [9, 10],
        // лицо f
        [1, 11],
        [11, 12],
        [12, 4],
        // шляпа f
        [11, 13],
        [13, 12],
        // левая нога f
        [2, 14],
        [14, 15],
        [15, 16],
        // правая нога f
        [17, 18],
        [18, 19],
        [19, 3],
        // остальное (E1) f
        [20, 21],
        [20, 23],
        [21, 22],
        [22, 23],
        // E2 f
        [24, 27],
        [24, 25],
        [25, 26],
        [26, 27],
        // M f
        // * задняя часть
        [28, 31],
        [28, 29],
        [30, 31],
        // туловище b
        [32, 33],
        [32, 35],
        [33, 34],
        [34, 35],
        // левая рука b
        [36, 37],
        [36, 32],
        [37, 38],
        // правая рука b
        [35, 41],
        [39, 40],
        [40, 41],
        // лицо b
        [32, 42],
        [42, 43],
        [43, 35],
        // шляпа b
        [42, 44],
        [44, 43],
        // левая нога b
        [33, 45],
        [45, 46],
        [46, 47],
        // правая нога b
        [48, 49],
        [49, 50],
        [50, 34],
        // * связи
        [1, 32],
        [4, 35],
        [11, 42],
        [12, 43],
        [2, 33],
        [3, 34],
        [14, 45],
        [15, 46],
        [18, 49],
        [19, 50],
        [5, 36],
        [6, 37],
        [7, 38],
        [8, 39],
        [9, 40],
        [10, 41],
    ];

    const convertModelToMatrix = (graphicModel) => {
        const modelMatrix = [];
        for (const point in graphicModel) {
            const part = graphicModel[point];
            const pointToMatrix = [part.x, part.y, part.z, 1];
            modelMatrix.push(pointToMatrix);
        }
        return modelMatrix;
    };

    // * только для начальной отрисовки и сохранении в action модель
    const [matrixModel] = useState(convertModelToMatrix(objectModel));

    return {
        edges,
        matrixModel,
    };
};
